#!/usr/bin/env ruby
# This scripts main purpose is to make it easier to securely use
# cloud storage such as Dropbox, Box, sync.com and google drive
# among other things. The simple idea is that before putting something in a cloud storage
# area to encrypt it using stong symmetric encryption first. This way we can be relatively
# confident that third parties and that the cloud service providers themselves cannot read
# our data while stored in the cloud.

# This version just will loop through a directory and any folders found within the directory
# will be encrypted using Gnu Privacy Guard. The script will then push the encrypted data
# to the Cloud storage folder in the home directory.

# Features to add:
# - Non Hard Coded Paths
# - Split large files over multiple storage platforms


require 'highline/import'

password = ask("Enter your password: ") { |q| q.echo = "*" }
rPassword = ask("Enter your password again: ") { |q| q.echo = "*" }

if password != rPassword then
  puts "Passwords didn't match"
  exit
end


Dir.glob('*').select do |f|
  if File.directory? f then
    abs = File.expand_path("./"+ f)           
    absTarZip = abs + ".tar.bz2"
    absTarZipGpg = absTarZip+".gpg"
    `tar -cyf #{absTarZip} #{abs}`
    `echo #{password} | gpg --passphrase-fd 0 -c #{absTarZip}`
    `cp  #{absTarZipGpg} ~/Sync/CV/`
    `rm #{absTarZip}`
    `rm #{absTarZipGpg}`
    puts "Backed up #{abs}"
  end  
end
puts "Goodbye"


